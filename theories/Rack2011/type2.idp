vocabulary V { 
    type Section_T 
    Section: (Section_T) → 𝔹
    type Element_T 
    Element: (Element_T) → 𝔹
    type Module_T 
    Module: (Module_T) → 𝔹
    type slot_T 
    slot: (slot_T) → 𝔹
    type Rack_T 
    Rack: (Rack_T) → 𝔹
    SofE: (Element) → Section
    EofM: (Module) → Element
    s_has_Module: (slot) → 𝔹
    Mofs: (slot) → Module
    Rofs: (slot) → Rack
    SofR: (Rack) → Section
    var S ∈ Section
    var E ∈ Element
    var M ∈ Module
    var s ∈ slot
    var R ∈ Rack
}
theory T:V { 
    1 ≤ #{S : true}.
    3 ≤ #{E : true}.
    ∀ S: 1 ≤ #{E : SofE(E) = S} ≤ 20.
    ∀ E: 1 ≤ #{M : EofM(M) = E} ≤ 8.
    ∀ M: #{s : Mofs(s) = M} = 2.
    ∀ R: #{s : Rofs(s) = R} = 5.
    ∀ S: 1 ≤ #{R : SofR(R) = S} ≤ 2.
    
    
    
}

procedure main() {
    logging.getLogger().setLevel(logging.INFO)
    interp, sol = Theory(T).generate(factor=1.5, timeout_seconds=0, unsat_seconds=5)
    pretty_print(sol)
    print(duration("Expansion"))
    print("-------------------")
    print(Theory(T).expand_lifting(sol))
    print("-------------------")
}
        